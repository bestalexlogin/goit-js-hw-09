{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAcC,EAAUC,GAC/BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,uBAAqBP,QAAiBC,OAE5CO,EAAK,sBAAoBR,QAAeC,MAAU,IAKrDQ,MAAKC,GAASC,EAAAd,GAASe,OAAOC,QAAQH,KACtCI,OAAMC,GAASJ,EAAAd,GAASe,OAAOI,QAAQD,IAAO,GAChDd,E,CApCQgB,SAASC,cAAc,YAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJ,IACEC,UAAUrB,MAAEA,EAAKsB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAIK,cAERxB,EAAQyB,OAAOzB,EAAMS,OACrBc,EAASE,OAAOF,EAAOd,OACvBa,EAAOG,OAAOH,EAAKb,OAEnB,IAAK,IAAIiB,EAAI,EAAGA,GAAKH,EAAQG,IAC3B5B,EAAc4B,EAAG1B,GACjBA,GAASsB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.js-form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  delay = Number(delay.value);\n  amount = Number(amount.value);\n  step = Number(step.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    });\n\n    promise\n      .then(value => Notiflix.Notify.success(value))\n      .catch(error => Notiflix.Notify.failure(error));\n  }, delay);\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","shouldResolve","Math","random","Promise","resolve","reject","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","document","querySelector","addEventListener","evt","preventDefault","elements","step","amount","currentTarget","Number","i"],"version":3,"file":"03-promises.c5e67112.js.map"}